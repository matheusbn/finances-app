{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../node_modules/@ionic-native/social-sharing/index.js","../../node_modules/@ionic-native/file/index.js","../../node_modules/@ionic-native/file-chooser/index.js","../../node_modules/@ionic-native/file-path/index.js","../../src/pages/settings/settings.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACN;AACoB;AACD;AACnB;AACe;AACN;AAoBnD,IAAa,kBAAkB;IAA/B;IAAiC,CAAC;IAAD,yBAAC;AAAD,CAAC;AAArB,kBAAkB;IAlB9B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,+DAAY;SACb;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;YACzC,oFAAe;SACb;QACD,OAAO,EAAE;YACP,+DAAY;SACb;QACD,SAAS,EAAE;YACT,mFAAa;YACb,gEAAI;YACJ,+EAAW;YACX,yEAAQ;SACT;KACF,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;AC3B/B;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,oBAAoB,gBAAgB;AACpC,mBAAmB,OAAO;AAC1B,iBAAiB;AACjB;AACA,4EAA4E,QAAQ;AACpF;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB;AACjB;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB;AACvB,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA,4FAA4F,QAAQ;AACpG;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA,8EAA8E,QAAQ;AACtF;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA,+EAA+E,QAAQ;AACvF;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,gCAAgC;AAChC,iBAAiB;AACjB;AACA,qHAAqH,QAAQ;AAC7H;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA,+EAA+E,QAAQ;AACvF;AACA;AACA,wBAAwB,OAAO;AAC/B,uBAAuB,OAAO;AAC9B,qBAAqB,OAAO;AAC5B,mBAAmB,OAAO;AAC1B,iBAAiB;AACjB;AACA,mGAAmG,QAAQ;AAC3G;AACA;AACA,sBAAsB,OAAO;AAC7B,2BAA2B,OAAO;AAClC,iBAAiB;AACjB;AACA,0EAA0E,QAAQ;AAClF;AACA;AACA,iBAAiB;AACjB;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB,kBAAkB;AAClB,kBAAkB,SAAS;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB,gBAAgB;AACrC,iBAAiB;AACjB;AACA,6FAA6F,QAAQ;AACrG;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB;AACvB,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB;AACA,yFAAyF,QAAQ;AACjG;AACA;AACA,4BAA4B,OAAO;AACnC;AACA,+EAA+E;AAC/E;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;AC3TA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kCAAkC;AACvF,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,WAAW,EAAE;AAC5C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,iBAAiB,cAAc;AAC/B;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,6BAA6B,OAAO;AACpC,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,wBAAwB,OAAO;AAC/B,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,mCAAmiC;;;;;;;;;;AC76BA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,QAAQ;AACtD;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;AC1EA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA,4DAA4D,QAAQ;AACpE;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3E0C;AAC8E;AACvE;AACY;AACnB;AACe;AACN;AACkB;AACK;AAC9B;A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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingsPage } from './settings';\nimport { TranslateModule } from 'ng2-translate/ng2-translate';\nimport { SocialSharing } from '@ionic-native/social-sharing';\nimport { File } from '@ionic-native/file';\nimport { FileChooser } from '@ionic-native/file-chooser';\nimport { FilePath } from '@ionic-native/file-path';\n\n@NgModule({\n  declarations: [\n    SettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingsPage),\n\tTranslateModule\n  ],\n  exports: [\n    SettingsPage\n  ],\n  providers: [\n    SocialSharing,\n    File,\n    FileChooser,\n    FilePath\n  ]\n})\nexport class SettingsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Social Sharing\n * @description\n * Share text, files, images, and links via social networks, sms, and email.\n *\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#web-share-api\n *\n * @usage\n * ```typescript\n * import { SocialSharing } from '@ionic-native/social-sharing';\n *\n * constructor(private socialSharing: SocialSharing) { }\n *\n * ...\n *\n * // Check if sharing via email is supported\n * this.socialSharing.canShareViaEmail().then(() => {\n *   // Sharing via email is possible\n * }).catch(() => {\n *   // Sharing via email is not possible\n * });\n *\n * // Share via email\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\n *   // Success!\n * }).catch(() => {\n *   // Error!\n * });\n * ```\n */\nvar SocialSharing = (function (_super) {\n    __extends(SocialSharing, _super);\n    function SocialSharing() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares using the share sheet\n     * @param message {string} The message you would like to share.\n     * @param subject {string} The subject\n     * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\n     * @param url {string} A URL to share\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.share = function (message, subject, file, url) { return; };\n    /**\n     * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\n     * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareWithOptions = function (options) { return; };\n    /**\n     * Checks if you can share via a specific app.\n     * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n     * @param message {string}\n     * @param subject {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.canShareVia = function (appName, message, subject, image, url) { return; };\n    /**\n     * Shares directly to Twitter\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaTwitter = function (message, image, url) { return; };\n    /**\n     * Shares directly to Facebook\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaFacebook = function (message, image, url) { return; };\n    /**\n     * Shares directly to Facebook with a paste message hint\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @param pasteMessageHint {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaFacebookWithPasteMessageHint = function (message, image, url, pasteMessageHint) { return; };\n    /**\n     * Shares directly to Instagram\n     * @param message {string}\n     * @param image {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaInstagram = function (message, image) { return; };\n    /**\n     * Shares directly to WhatsApp\n     * @param message {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaWhatsApp = function (message, image, url) { return; };\n    /**\n     * Shares directly to a WhatsApp Contact\n     * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\n     * @param message {string} Message to send\n     * @param image {string} Image to send (does not work on iOS\n     * @param url {string} Link to send\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaWhatsAppToReceiver = function (receiver, message, image, url) { return; };\n    /**\n     * Share via SMS\n     * @param messge {string} message to send\n     * @param phoneNumber {string} Number or multiple numbers seperated by commas\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaSMS = function (messge, phoneNumber) { return; };\n    /**\n     * Checks if you can share via email\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.canShareViaEmail = function () { return; };\n    /**\n     * Share via Email\n     * @param message {string}\n     * @param subject {string}\n     * @param to {string[]}\n     * @param cc {string[]} Optional\n     * @param bcc {string[]} Optional\n     * @param files {string|string[]} Optional URL or local path to file(s) to attach\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareViaEmail = function (message, subject, to, cc, bcc, files) { return; };\n    /**\n     * Share via AppName\n     * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n     * @param message {string}\n     * @param subject {string}\n     * @param image {string}\n     * @param url {string}\n     * @returns {Promise<any>}\n     */\n    SocialSharing.prototype.shareVia = function (appName, message, subject, image, url) { return; };\n    /**\n     * defines the popup position before call the share method.\n     * @param targetBounds {string} left, top, width, height\n     */\n    SocialSharing.prototype.setIPadPopupCoordinates = function (targetBounds) { };\n    return SocialSharing;\n}(IonicNativePlugin));\nSocialSharing.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSocialSharing.ctorParameters = function () { return []; };\n__decorate([\n    Cordova({\n        successIndex: 4,\n        errorIndex: 5\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"share\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareWithOptions\", null);\n__decorate([\n    Cordova({\n        successIndex: 5,\n        errorIndex: 6,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"canShareVia\", null);\n__decorate([\n    Cordova({\n        successIndex: 3,\n        errorIndex: 4,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaTwitter\", null);\n__decorate([\n    Cordova({\n        successIndex: 3,\n        errorIndex: 4,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaFacebook\", null);\n__decorate([\n    Cordova({\n        successIndex: 4,\n        errorIndex: 5,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaFacebookWithPasteMessageHint\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaInstagram\", null);\n__decorate([\n    Cordova({\n        successIndex: 3,\n        errorIndex: 4,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaWhatsApp\", null);\n__decorate([\n    Cordova({\n        successIndex: 4,\n        errorIndex: 5,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaWhatsAppToReceiver\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaSMS\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"canShareViaEmail\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS', 'Android'],\n        successIndex: 6,\n        errorIndex: 7\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Array, Array, Array, Object]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareViaEmail\", null);\n__decorate([\n    Cordova({\n        successIndex: 5,\n        errorIndex: 6,\n        platforms: ['iOS', 'Android']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], SocialSharing.prototype, \"shareVia\", null);\n__decorate([\n    Cordova({\n        sync: true,\n        platforms: ['iOS']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", void 0)\n], SocialSharing.prototype, \"setIPadPopupCoordinates\", null);\nSocialSharing = __decorate([\n    Plugin({\n        pluginName: 'SocialSharing',\n        plugin: 'cordova-plugin-x-socialsharing',\n        pluginRef: 'plugins.socialsharing',\n        repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\n        platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone']\n    })\n], SocialSharing);\nexport { SocialSharing };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/social-sharing/index.js\n// module id = 289\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { CordovaProperty, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name File\r\n * @description\r\n * This plugin implements a File API allowing read/write access to files residing on the device.\r\n *\r\n * The File class implements static convenience functions to access files and directories.\r\n *\r\n * Example:\r\n * ```\r\n * import { File } from '@ionic-native/file';\r\n *\r\n * constructor(private file: File) { }\r\n *\r\n * ...\r\n *\r\n * this.file.checkDir(this.file.dataDirectory, 'mydir').then(_ => console.log('Directory exists')).catch(err => console.log('Directory doesnt exist'));\r\n *\r\n * ```\r\n *\r\n *  This plugin is based on several specs, including : The HTML5 File API http: //www.w3.org/TR/FileAPI/\r\n *  The (now-defunct) Directories and System extensions Latest: http: //www.w3.org/TR/2012/WD-file-system-api-20120417/\r\n *  Although most of the plugin code was written when an earlier spec was current: http: //www.w3.org/TR/2011/WD-file-system-api-20110419/\r\n *  It also implements the FileWriter spec : http: //dev.w3.org/2009/dap/file-system/file-writer.html\r\n *  @interfaces\r\n *  IFile\r\n *  Entry\r\n *  DirectoryEntry\r\n *  DirectoryReader\r\n *  FileSystem\r\n */\r\nvar File = (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cordovaFileError = {\r\n            1: 'NOT_FOUND_ERR',\r\n            2: 'SECURITY_ERR',\r\n            3: 'ABORT_ERR',\r\n            4: 'NOT_READABLE_ERR',\r\n            5: 'ENCODING_ERR',\r\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\r\n            7: 'INVALID_STATE_ERR',\r\n            8: 'SYNTAX_ERR',\r\n            9: 'INVALID_MODIFICATION_ERR',\r\n            10: 'QUOTA_EXCEEDED_ERR',\r\n            11: 'TYPE_MISMATCH_ERR',\r\n            12: 'PATH_EXISTS_ERR',\r\n            13: 'WRONG_ENTRY_TYPE',\r\n            14: 'DIR_READ_ERR',\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get free disk space in Bytes\r\n     * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\r\n     */\r\n    File.prototype.getFreeDiskSpace = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\r\n        });\r\n    };\r\n    /**\r\n     * Check if a directory exists in a certain path, directory.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dir Name of directory to check\r\n     * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\r\n     */\r\n    File.prototype.checkDir = function (path, dir) {\r\n        if ((/^\\//.test(dir))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var fullpath = path + dir;\r\n        return this.resolveDirectoryUrl(fullpath)\r\n            .then(function () {\r\n            return true;\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new directory in the specific path.\r\n     * The replace boolean value determines whether to replace an existing directory with the same name.\r\n     * If an existing directory exists and the replace value is false, the promise will fail and return an error.\r\n     *\r\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory to create\r\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\r\n     * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\r\n     */\r\n    File.prototype.createDir = function (path, dirName, replace) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var options = {\r\n            create: true\r\n        };\r\n        if (!replace) {\r\n            options.exclusive = true;\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, options);\r\n        });\r\n    };\r\n    /**\r\n     * Remove a directory at a given path.\r\n     *\r\n     * @param {string} path The path to the directory\r\n     * @param {string} dirName The directory name\r\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\r\n     */\r\n    File.prototype.removeDir = function (path, dirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (de) {\r\n            return _this.remove(de);\r\n        });\r\n    };\r\n    /**\r\n     * Move a directory to a given path.\r\n     *\r\n     * @param {string} path The source path to the directory\r\n     * @param {string} dirName The source directory name\r\n     * @param {string} newPath The destionation path to the directory\r\n     * @param {string} newDirName The destination directory name\r\n     * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\r\n     */\r\n    File.prototype.moveDir = function (path, dirName, newPath, newDirName) {\r\n        var _this = this;\r\n        newDirName = newDirName || dirName;\r\n        if ((/^\\//.test(newDirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (srcde) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.move(srcde, deste, newDirName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Copy a directory in various methods. If destination directory exists, will fail to copy.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory to copy\r\n     * @param {string} newPath Base FileSystem of new location\r\n     * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\r\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\r\n     */\r\n    File.prototype.copyDir = function (path, dirName, newPath, newDirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(newDirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (srcde) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.copy(srcde, deste, newDirName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List files and directory from a given path.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory\r\n     * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\r\n     */\r\n    File.prototype.listDir = function (path, dirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false, exclusive: false });\r\n        })\r\n            .then(function (de) {\r\n            var reader = de.createReader();\r\n            return _this.readEntries(reader);\r\n        });\r\n    };\r\n    /**\r\n     * Removes all files and the directory from a desired location.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} dirName Name of directory\r\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\r\n     */\r\n    File.prototype.removeRecursively = function (path, dirName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(dirName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'directory cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getDirectory(fse, dirName, { create: false });\r\n        })\r\n            .then(function (de) {\r\n            return _this.rimraf(de);\r\n        });\r\n    };\r\n    /**\r\n     * Check if a file exists in a certain path, directory.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file to check\r\n     * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\r\n     */\r\n    File.prototype.checkFile = function (path, file) {\r\n        if ((/^\\//.test(file))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveLocalFilesystemUrl(path + file)\r\n            .then(function (fse) {\r\n            if (fse.isFile) {\r\n                return true;\r\n            }\r\n            else {\r\n                var err = new FileError(13);\r\n                err.message = 'input is not a file';\r\n                return Promise.reject(err);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new file in the specific path.\r\n     * The replace boolean value determines whether to replace an existing file with the same name.\r\n     * If an existing file exists and the replace value is false, the promise will fail and return an error.\r\n     *\r\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to create\r\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\r\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\r\n     */\r\n    File.prototype.createFile = function (path, fileName, replace) {\r\n        var _this = this;\r\n        if ((/^\\//.test(fileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var options = {\r\n            create: true\r\n        };\r\n        if (!replace) {\r\n            options.exclusive = true;\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, options);\r\n        });\r\n    };\r\n    /**\r\n     * Removes a file from a desired location.\r\n     *\r\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to remove\r\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\r\n     */\r\n    File.prototype.removeFile = function (path, fileName) {\r\n        var _this = this;\r\n        if ((/^\\//.test(fileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, { create: false });\r\n        })\r\n            .then(function (fe) {\r\n            return _this.remove(fe);\r\n        });\r\n    };\r\n    /** Write a new file to the desired location.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName path relative to base path\r\n     * @param {string | Blob} text content or blob to write\r\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\r\n     * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\r\n     */\r\n    File.prototype.writeFile = function (path, fileName, text, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        if ((/^\\//.test(fileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        var getFileOpts = {\r\n            create: !options.append,\r\n            exclusive: !options.replace\r\n        };\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (directoryEntry) {\r\n            return _this.getFile(directoryEntry, fileName, getFileOpts);\r\n        })\r\n            .then(function (fileEntry) {\r\n            return _this.writeFileEntry(fileEntry, text, options);\r\n        });\r\n    };\r\n    /** Write content to FileEntry.\r\n     *\r\n     * @hidden\r\n     * @param {FileEntry} fe file entry object\r\n     * @param {string | Blob} text content or blob to write\r\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\r\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\r\n     */\r\n    File.prototype.writeFileEntry = function (fe, text, options) {\r\n        var _this = this;\r\n        return this.createWriter(fe)\r\n            .then(function (writer) {\r\n            if (options.append) {\r\n                writer.seek(writer.length);\r\n            }\r\n            if (options.truncate) {\r\n                writer.truncate(options.truncate);\r\n            }\r\n            return _this.write(writer, text);\r\n        })\r\n            .then(function () { return fe; });\r\n    };\r\n    /** Write to an existing file.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName path relative to base path\r\n     * @param {string | Blob} text content or blob to write\r\n     * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\r\n     */\r\n    File.prototype.writeExistingFile = function (path, fileName, text) {\r\n        return this.writeFile(path, fileName, text, { replace: true });\r\n    };\r\n    /**\r\n     * Read the contents of a file as text.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\r\n     */\r\n    File.prototype.readAsText = function (path, file) {\r\n        return this.readFile(path, file, 'Text');\r\n    };\r\n    /**\r\n     * Read file and return data as a base64 encoded data url.\r\n     * A data url is of the form:\r\n     *      data: [<mediatype>][;base64],<data>\r\n  \r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\r\n     */\r\n    File.prototype.readAsDataURL = function (path, file) {\r\n        return this.readFile(path, file, 'DataURL');\r\n    };\r\n    /**\r\n     * Read file and return data as a binary data.\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\r\n     */\r\n    File.prototype.readAsBinaryString = function (path, file) {\r\n        return this.readFile(path, file, 'BinaryString');\r\n    };\r\n    /**\r\n     * Read file and return data as an ArrayBuffer.\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} file Name of file, relative to path.\r\n     * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\r\n     */\r\n    File.prototype.readAsArrayBuffer = function (path, file) {\r\n        return this.readFile(path, file, 'ArrayBuffer');\r\n    };\r\n    File.prototype.readFile = function (path, file, readAs) {\r\n        var _this = this;\r\n        if ((/^\\//.test(file))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file-name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (directoryEntry) {\r\n            return _this.getFile(directoryEntry, file, { create: false });\r\n        })\r\n            .then(function (fileEntry) {\r\n            var reader = new FileReader();\r\n            return new Promise(function (resolve, reject) {\r\n                reader.onloadend = function () {\r\n                    if (reader.result !== undefined || reader.result !== null) {\r\n                        resolve(reader.result);\r\n                    }\r\n                    else if (reader.error !== undefined || reader.error !== null) {\r\n                        reject(reader.error);\r\n                    }\r\n                    else {\r\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\r\n                    }\r\n                };\r\n                fileEntry.file(function (file) {\r\n                    reader[\"readAs\" + readAs].call(reader, file);\r\n                }, function (error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Move a file to a given path.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to move\r\n     * @param {string} newPath Base FileSystem of new location\r\n     * @param {string} newFileName New name of file to move to (leave blank to remain the same)\r\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\r\n     */\r\n    File.prototype.moveFile = function (path, fileName, newPath, newFileName) {\r\n        var _this = this;\r\n        newFileName = newFileName || fileName;\r\n        if ((/^\\//.test(newFileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, { create: false });\r\n        })\r\n            .then(function (srcfe) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.move(srcfe, deste, newFileName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Copy a file in various methods. If file exists, will fail to copy.\r\n     *\r\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\r\n     * @param {string} fileName Name of file to copy\r\n     * @param {string} newPath Base FileSystem of new location\r\n     * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\r\n     * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\r\n     */\r\n    File.prototype.copyFile = function (path, fileName, newPath, newFileName) {\r\n        var _this = this;\r\n        newFileName = newFileName || fileName;\r\n        if ((/^\\//.test(newFileName))) {\r\n            var err = new FileError(5);\r\n            err.message = 'file name cannot start with \\/';\r\n            return Promise.reject(err);\r\n        }\r\n        return this.resolveDirectoryUrl(path)\r\n            .then(function (fse) {\r\n            return _this.getFile(fse, fileName, { create: false });\r\n        })\r\n            .then(function (srcfe) {\r\n            return _this.resolveDirectoryUrl(newPath)\r\n                .then(function (deste) {\r\n                return _this.copy(srcfe, deste, newFileName);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.fillErrorMessage = function (err) {\r\n        try {\r\n            err.message = this.cordovaFileError[err.code];\r\n        }\r\n        catch (e) { }\r\n    };\r\n    /**\r\n     * Resolves a local file system URL\r\n     * @param fileUrl {string} file system url\r\n     * @returns {Promise<Entry>}\r\n     */\r\n    File.prototype.resolveLocalFilesystemUrl = function (fileUrl) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                window.resolveLocalFileSystemURL(fileUrl, function (entry) {\r\n                    resolve(entry);\r\n                }, function (err) {\r\n                    _this.fillErrorMessage(err);\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (xc) {\r\n                _this.fillErrorMessage(xc);\r\n                reject(xc);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Resolves a local directory url\r\n     * @param directoryUrl {string} directory system url\r\n     * @returns {Promise<DirectoryEntry>}\r\n     */\r\n    File.prototype.resolveDirectoryUrl = function (directoryUrl) {\r\n        return this.resolveLocalFilesystemUrl(directoryUrl)\r\n            .then(function (de) {\r\n            if (de.isDirectory) {\r\n                return de;\r\n            }\r\n            else {\r\n                var err = new FileError(13);\r\n                err.message = 'input is not a directory';\r\n                return Promise.reject(err);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Get a directory\r\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\r\n     * @param directoryName {string} Directory name\r\n     * @param flags {Flags} Options\r\n     * @returns {Promise<DirectoryEntry>}\r\n     */\r\n    File.prototype.getDirectory = function (directoryEntry, directoryName, flags) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                directoryEntry.getDirectory(directoryName, flags, function (de) {\r\n                    resolve(de);\r\n                }, function (err) {\r\n                    _this.fillErrorMessage(err);\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (xc) {\r\n                _this.fillErrorMessage(xc);\r\n                reject(xc);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Get a file\r\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\r\n     * @param fileName {string} File name\r\n     * @param flags {Flags} Options\r\n     * @returns {Promise<FileEntry>}\r\n     */\r\n    File.prototype.getFile = function (directoryEntry, fileName, flags) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                directoryEntry.getFile(fileName, flags, resolve, function (err) {\r\n                    _this.fillErrorMessage(err);\r\n                    reject(err);\r\n                });\r\n            }\r\n            catch (xc) {\r\n                _this.fillErrorMessage(xc);\r\n                reject(xc);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.remove = function (fe) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fe.remove(function () {\r\n                resolve({ success: true, fileRemoved: fe });\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.move = function (srce, destdir, newName) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            srce.moveTo(destdir, newName, function (deste) {\r\n                resolve(deste);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.copy = function (srce, destdir, newName) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            srce.copyTo(destdir, newName, function (deste) {\r\n                resolve(deste);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.readEntries = function (dr) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            dr.readEntries(function (entries) {\r\n                resolve(entries);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.rimraf = function (de) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            de.removeRecursively(function () {\r\n                resolve({ success: true, fileRemoved: de });\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.createWriter = function (fe) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            fe.createWriter(function (writer) {\r\n                resolve(writer);\r\n            }, function (err) {\r\n                _this.fillErrorMessage(err);\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.write = function (writer, gu) {\r\n        if (gu instanceof Blob) {\r\n            return this.writeFileInChunks(writer, gu);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            writer.onwriteend = function (evt) {\r\n                if (writer.error) {\r\n                    reject(writer.error);\r\n                }\r\n                else {\r\n                    resolve(evt);\r\n                }\r\n            };\r\n            writer.write(gu);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    File.prototype.writeFileInChunks = function (writer, file) {\r\n        var BLOCK_SIZE = 1024 * 1024;\r\n        var writtenSize = 0;\r\n        function writeNextChunk() {\r\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\r\n            var chunk = file.slice(writtenSize, writtenSize + size);\r\n            writtenSize += size;\r\n            writer.write(chunk);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            writer.onerror = reject;\r\n            writer.onwrite = function () {\r\n                if (writtenSize < file.size) {\r\n                    writeNextChunk();\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            };\r\n            writeNextChunk();\r\n        });\r\n    };\r\n    return File;\r\n}(IonicNativePlugin));\r\nFile.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nFile.ctorParameters = function () { return []; };\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"applicationDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"applicationStorageDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"dataDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"cacheDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"externalApplicationStorageDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"externalDataDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"externalCacheDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"externalRootDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"tempDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"syncedDataDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"documentsDirectory\", void 0);\r\n__decorate([\r\n    CordovaProperty,\r\n    __metadata(\"design:type\", String)\r\n], File.prototype, \"sharedDirectory\", void 0);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"getFreeDiskSpace\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"checkDir\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, Boolean]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"createDir\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"removeDir\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"moveDir\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"copyDir\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"listDir\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"removeRecursively\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"checkFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, Boolean]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"createFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"removeFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, Object, Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"writeFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"writeExistingFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"readAsText\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"readAsDataURL\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"readAsBinaryString\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"readAsArrayBuffer\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"moveFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"copyFile\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"resolveLocalFilesystemUrl\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"resolveDirectoryUrl\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, String, Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"getDirectory\", null);\r\n__decorate([\r\n    CordovaCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, String, Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], File.prototype, \"getFile\", null);\r\nFile = __decorate([\r\n    Plugin({\r\n        pluginName: 'File',\r\n        plugin: 'cordova-plugin-file',\r\n        pluginRef: 'cordova.file',\r\n        repo: 'https://github.com/apache/cordova-plugin-file',\r\n        platforms: ['Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'macOS', 'Ubuntu', 'Windows', 'Windows Phone']\r\n    })\r\n], File);\r\nexport { File };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file/index.js\n// module id = 290\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name File Chooser\r\n * @description\r\n *\r\n * Opens the file picker on Android for the user to select a file, returns a file URI.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { FileChooser } from '@ionic-native/file-chooser';\r\n *\r\n * constructor(private fileChooser: FileChooser) { }\r\n *\r\n * ...\r\n *\r\n * this.fileChooser.open()\r\n *   .then(uri => console.log(uri))\r\n *   .catch(e => console.log(e));\r\n *\r\n * ```\r\n */\r\nvar FileChooser = (function (_super) {\r\n    __extends(FileChooser, _super);\r\n    function FileChooser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Open a file\r\n     * @returns {Promise<string>}\r\n     */\r\n    FileChooser.prototype.open = function () { return; };\r\n    return FileChooser;\r\n}(IonicNativePlugin));\r\nFileChooser.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nFileChooser.ctorParameters = function () { return []; };\r\n__decorate([\r\n    Cordova(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], FileChooser.prototype, \"open\", null);\r\nFileChooser = __decorate([\r\n    Plugin({\r\n        pluginName: 'FileChooser',\r\n        plugin: 'cordova-plugin-filechooser',\r\n        pluginRef: 'fileChooser',\r\n        repo: 'https://github.com/ihadeed/cordova-filechooser',\r\n        platforms: ['Android']\r\n    })\r\n], FileChooser);\r\nexport { FileChooser };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file-chooser/index.js\n// module id = 291\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n/**\r\n * @name File Path\r\n * @description\r\n *\r\n * This plugin allows you to resolve the native filesystem path for Android content URIs and is based on code in the aFileChooser library.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { FilePath } from '@ionic-native/file-path';\r\n *\r\n * constructor(private filePath: FilePath) { }\r\n *\r\n * ...\r\n *\r\n * this.filePath.resolveNativePath(path)\r\n *   .then(filePath => console.log(filePath))\r\n *   .catch(err => console.log(err));\r\n *\r\n * ```\r\n */\r\nvar FilePath = (function (_super) {\r\n    __extends(FilePath, _super);\r\n    function FilePath() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Resolve native path for given content URL/path.\r\n     * @param {String} path  Content URL/path.\r\n     * @returns {Promise<string>}\r\n     */\r\n    FilePath.prototype.resolveNativePath = function (path) { return; };\r\n    return FilePath;\r\n}(IonicNativePlugin));\r\nFilePath.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nFilePath.ctorParameters = function () { return []; };\r\n__decorate([\r\n    Cordova(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], FilePath.prototype, \"resolveNativePath\", null);\r\nFilePath = __decorate([\r\n    Plugin({\r\n        pluginName: 'FilePath',\r\n        plugin: 'cordova-plugin-filepath',\r\n        pluginRef: 'window.FilePath',\r\n        repo: 'https://github.com/hiddentao/cordova-plugin-filepath',\r\n        platforms: ['Android']\r\n    })\r\n], FilePath);\r\nexport { FilePath };\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/file-path/index.js\n// module id = 292\n// module chunks = 0","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, ToastController, LoadingController} from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { SocialSharing } from '@ionic-native/social-sharing';\nimport { File } from '@ionic-native/file';\nimport { FileChooser } from '@ionic-native/file-chooser';\nimport { FilePath } from '@ionic-native/file-path';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { MoneyDataProvider } from '../../providers/money-data/money-data';\nimport { Wallet } from '../../model/wallet';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html',\n})\nexport class SettingsPage {\n\n  language: string = 'en'\n  fileName: string = 'finances-data.json'\n\n\tconstructor(public navCtrl: NavController, public navParams: NavParams, public translateService: TranslateService,\n    public database: DatabaseProvider, public alertCtrl: AlertController, public toastCtrl: ToastController, \n    public loadingCtrl: LoadingController, public moneyData: MoneyDataProvider, private socialSharing: SocialSharing,\n    private file: File, private fileChooser: FileChooser, private filePath: FilePath) {\n\t}\n\n\n\tionViewWillLeave() {\n\t\tthis.translateService.use(this.language)\n\t}\n\n  addWallet() {\n    const alertOptions: any = {\n      title: 'New Wallet',\n      subTitle: 'Enter the name for the new wallet',\n      inputs: [\n        {\n          name: 'name'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'      \n        },\n        {\n          text: 'Confirm',\n          handler: async (walletData) => {\n            if(walletData.name) {\n              const wallet = new Wallet(walletData.name)\n              const data = await this.database.insertWallet(wallet)\n              wallet.id = data.insertId\n              this.moneyData.wallets.push(wallet)\n              this.presentToast(\"Wallet added\")\n            }\n          }\n        }\n      ]\n    }\n    const alert = this.alertCtrl.create(alertOptions)\n    alert.present()\n  }\n\n  deleteWallet() {\n    const alertOptions: any = {\n      title: 'Delete Wallet',\n      inputs: this.moneyData.wallets.map(wallet => {\n        return {\n          type: 'radio',\n          label: wallet.name,\n          value: wallet.id.toString()\n        }\n      }),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',          \n        },\n        {\n          text: 'Confirm',\n          handler: async walletId => {\n            if(!walletId) return\n            if(this.moneyData.wallets.length === 1) {\n              const errorAlert = this.alertCtrl.create({\n                title: \"Oops!\",\n                subTitle: \"You can't delete your only wallet.\",\n                buttons: [\n                  {\n                    text: 'OK'\n                  }\n                ]\n              })\n              errorAlert.present()\n              return\n            }\n            if(this.moneyData.currentWalletId == walletId) { // if selected wallet is active, change current wallet\n              if(this.moneyData.wallets[0].id === this.moneyData.currentWalletId) \n                this.moneyData.currentWalletId = this.moneyData.wallets[1].id\n              else this.moneyData.currentWalletId = this.moneyData.wallets[0].id\n            }\n            await this.database.deleteWallet(walletId)\n            this.moneyData.loadWallets()\n            this.moneyData.loadCashflows()\n            this.presentToast(\"Wallet deleted\")\n          }\n        }\n      ]\n    }\n    const alert = this.alertCtrl.create(alertOptions)\n    alert.present()\n  }\n\n  async exportData() {\n    const loading = this.loadingCtrl.create()\n    loading.present()\n    const data = []\n    const wallets = await this.database.getWallets()\n    for(const wallet of wallets) {\n      wallet.cashflows = await this.database.getCashflows(wallet.id)\n      wallet.cashflows.forEach(cashflow => {\n        delete cashflow.id\n        delete cashflow.walletId\n      })\n      delete wallet.id\n      data.push(wallet)\n    }\n    const jsonData = JSON.stringify(data)\n\n    await this.file.writeFile(this.file.dataDirectory, this.fileName, jsonData, { replace: true })\n      .catch(console.error)\n    loading.dismiss()\n    await this.socialSharing.share(``, 'Finances App data', this.file.dataDirectory + this.fileName)\n      .catch(console.error)\n    this.file.removeFile(this.file.dataDirectory, this.fileName).catch(console.error)\n  }\n\n  async importData() {\n    const uri: any = await this.fileChooser.open().catch(console.error)\n    const filePath: any = await this.filePath.resolveNativePath(uri).catch(console.error)\n\n    const lastSlash = filePath.lastIndexOf('/') + 1\n    const dirPath: string = filePath.substr(0, lastSlash)\n    const fileName: string = filePath.substr(lastSlash, filePath.length)\n\n    const fileNameArray: string[] = fileName.split('.')\n    const formatIndex: number = fileNameArray.length - 1\n    if(fileNameArray[formatIndex] !== 'json') {\n      const errorAlert = this.alertCtrl.create({\n        title: \"Wrong File\",\n        subTitle: `The file must be of \"JSON\" format. It'll probably be called \"${this.fileName}\".`,\n        buttons: [\n          {\n            text: 'OK'\n          }\n        ]\n      })\n      errorAlert.present()\n      return\n    }\n\n    const jsonData: string = await this.file.readAsText(dirPath, fileName)\n    const data = JSON.parse(jsonData)\n    await this.database.loadFromData(data)\n    await this.moneyData.load()\n    this.presentToast(\"Data imported successfully\")\n  }\n\n  presentToast(message: string) {\n    const toast = this.toastCtrl.create({\n      message: message,\n      duration: 1500,\n      position: 'bottom'\n    })\n\n    toast.present()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}